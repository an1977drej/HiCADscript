/*
 * File generated by SourceCombiner.exe using 7 source files.
 * Created On: 27.09.2020 21:18:30
*/
using HiCADscript;
using ISD.BaseTypes;
using ISD.CAD.Base;
using ISD.CAD.Contexts;
using ISD.CAD.Creators;
using ISD.CAD.Data;
using ISD.CAD.Dimensioning;
using ISD.CAD.Interface;
using ISD.CAD.IO;
using ISD.Math;
using ISD.Scripting;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
//*** SourceCombiner -> original file CreateShapeFromBox.cs ***
static class CreateShapeFromBox
{
    static UnconstrainedContext Context;
    static EBPart ebPart;
    static frmGUI scriptGUI;
    static CreateShapeFromBox()
    {
        Context = Script.Context;
        scriptGUI = Script.scriptGUI;
    }
    public static Part PlaceShapeInCurrentNode(EBPart ebPart)
    {
        AssemblyNode parent = (AssemblyNode)Context.ActiveNode;
        BlockCreator blockCreator = new BlockCreator(ebPart.Length, ebPart.Width, ebPart.Height);
        Part Box = Context.CreatePart(blockCreator, parent);
        Box.Name = ebPart.BMK;
        PartLabel simpleLbl = PartLabel.Create(
         new BasePoint(Box, new Point3D(0, 0, 0)),
         new Vector2D(0, 0),
         ebPart.BMK,
         Context.CurrentView);
        //Figure f;
        //string ftdPath = @"C:\HiCAD\templates\Font_Arial\sys\Textblock.ftd";
        //FigureLabel fl = FigureLabelCreator.Create(ftdPath, activeScene.ActiveFigure, new Point2D(0, 0), new Vector2D(25, -25));
        //2D text
        //FigureTextCreator.Create("ggg", activeScene.ActiveFigure, new Point2D(0, 0), new Angle(90));
        parent.Activate();
        Context.EnforceBrowserUpdate();
        Context.EnforceRedraw();
        return Box;
    }
    public static void PlaceShapeOnSelectedPoint(EBPart EbP)
    {
        ebPart = EbP;
        Selection.SelectionEvent += OnPointSelected;
        Selection.StartSelection(SelectionType.Point, "Select a point");
    }
    private static void OnPointSelected(object sender, SelectionEventArgs args)
    {
        Transformation blockTransformation = new Transformation();
        PointOption lastPoint = args.Result[0] as PointOption;
        if (lastPoint != null)
        {
            scriptGUI.Say(lastPoint.Point.ToString());
            blockTransformation.SetTranslation(new Vector3D(lastPoint.Point));
            Part box = PlaceShapeInCurrentNode(ebPart);
            box.Move(blockTransformation);
        }
        Selection.SelectionEvent -= OnPointSelected;
    }
}
//*** SourceCombiner -> original file CreateShapeFromStep.cs ***
namespace HiCADscript
{
    static class CreateShapeFromStep
    {
        static UnconstrainedContext Context;
        static EBPart ebPart;
        static frmGUI scriptGUI;
        static CreateShapeFromStep()
        {
            Context = Script.Context;
            scriptGUI = Script.scriptGUI;
        }
        public static Part PlaceShapeInCurrentNode(EBPart EbP)
        {
            AssemblyNode parent = (AssemblyNode)Context.ActiveNode;
            ISD.CAD.IO.StepImportSettings settings = new ISD.CAD.IO.StepImportSettings();
            Part shape = (Part)ISD.CAD.IO.FileIO.Load(@"C:\Users\Andrej\Downloads\STEP-2.14\9666.926(2).stp", settings);
            shape.DisplaceTo(parent);
            scriptGUI.Say(shape.UID);
            Context.EnforceBrowserUpdate();
            Context.EnforceRedraw();
            return shape;
        }
        public static void PlaceShapeOnSelectedPoint(EBPart EbP)
        {
            ebPart = EbP;
            Selection.SelectionEvent += OnPointSelected;
            Selection.StartSelection(SelectionType.Point, "Select a point");
        }
        private static void OnPointSelected(object sender, SelectionEventArgs args)
        {
            Transformation blockTransformation = new Transformation();
            PointOption lastPoint = args.Result[0] as PointOption;
            if (lastPoint != null)
            {
                scriptGUI.Say(lastPoint.Point.ToString());
                blockTransformation.SetTranslation(new Vector3D(lastPoint.Point));
                Part box = PlaceShapeInCurrentNode(ebPart);
                box.Move(blockTransformation);
            }
            Selection.SelectionEvent -= OnPointSelected;
        }
    }
}
//*** SourceCombiner -> original file EBPart.cs ***
public class EBPart
{
    public string BMK { get; set; }
    public string IsGezeichnet { get; set; }
    public double Length { get; set; }
    public double Width { get; set; }
    public double Height { get; set; }
    public string StepPath { get; set; }
    public List<EBPart> GetEBParts()
    {
        List<EBPart> EBParts = new List<EBPart>();
        EBParts.Add(new EBPart { BMK = "- K3", IsGezeichnet = "x", Length = 30, Width = 20, Height = 40 });
        EBParts.Add(new EBPart { BMK = "- K33", IsGezeichnet = "x", Length = 30, Width = 20, Height = 40 });
        EBParts.Add(new EBPart { BMK = "- K50", IsGezeichnet = "x", Length = 30, Width = 20, Height = 40,
            StepPath = @"C:\Users\Andrej\Downloads\STEP-2.14\9666.926(2).stp" });
        return EBParts;
    }}
//*** SourceCombiner -> original file frmGUI.cs ***
public partial class frmGUI : Form
{
    public frmGUI()
    {
        InitializeComponent();
        InitializeListView();
        InitListViewProperties();
    }
    public void Say(string txt)
    {
        txtMessage.Text += txt + Environment.NewLine;
    }
    public void ShowProperties(Dictionary<string, string> prop)
    {
        listViewProperties.Items.Clear();
        foreach (KeyValuePair<string, string> p in prop)
        {
            listViewProperties.Items.Add(new ListViewItem(new[] { p.Key, p.Value, }));
        }
    }
    private void InitListViewProperties()
    {
        ColumnHeader header1, header2;
        header1 = new ColumnHeader();
        header2 = new ColumnHeader();
        header1.Text = "Designation";
        header1.TextAlign = HorizontalAlignment.Left;
        header1.Width = 100;
        header2.TextAlign = HorizontalAlignment.Left;
        header2.Text = "Value";
        header2.Width = 200;
        listViewProperties.Columns.Add(header1);
        listViewProperties.Columns.Add(header2);
        listViewProperties.View = View.Details;
        listViewProperties.GridLines = true;
    }
    private void button1_Click(object sender, EventArgs e)
    {
        Script.LoadKRA();
    }
    private void InitializeListView()
    {
        EBPart part = new EBPart();
        olvListViewEbParts.SetObjects(part.GetEBParts());
    }
    private void olvSongs_DoubleClick(object sender, EventArgs e)
    {
        EBPart ebPart = (EBPart)olvListViewEbParts.SelectedObject;
        if (ebPart.StepPath == null)
        {
            CreateShapeFromBox.PlaceShapeOnSelectedPoint(ebPart);
        }
        else
        {
            CreateShapeFromStep.PlaceShapeOnSelectedPoint(ebPart);
        }
        ebPart.IsGezeichnet = "w";
        //MessageBox.Show(part.BMK);
        //MessageBox.Show(olvSongs.SelectedItem.Text);
        olvListViewEbParts.RefreshObject(ebPart);
        olvListViewEbParts.Update();
    }
    private void button2_Click(object sender, EventArgs e)
    {
        Script.test();
    }
    private void button3_Click(object sender, EventArgs e)
    {
        //Script.butt3();
        Script.GetCoordinate();
    }
    private void button4_Click(object sender, EventArgs e)
    {
    }
    private void btnSetAttr_Click(object sender, EventArgs e)
    {
        MyAttributesForNode.SetNodeMyAttributes("MyAttrubute", "Hallo");
    }
}
//*** SourceCombiner -> original file frmGUI.Designer.cs ***
partial class frmGUI
{
    /// <summary>
    /// Required designer variable.
    /// </summary>
    private System.ComponentModel.IContainer components = null;
    /// <summary>
    /// Clean up any resources being used.
    /// </summary>
    /// <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    protected override void Dispose(bool disposing)
    {
        if (disposing && (components != null))
        {
            components.Dispose();
        }
        base.Dispose(disposing);
    }
    #region Windows Form Designer generated code
    /// <summary>
    /// Required method for Designer support - do not modify
    /// the contents of this method with the code editor.
    /// </summary>
    private void InitializeComponent()
    {
            this.button1 = new System.Windows.Forms.Button();
            this.button2 = new System.Windows.Forms.Button();
            this.olvListViewEbParts = new BrightIdeasSoftware.ObjectListView();
            this.titleColumn = ((BrightIdeasSoftware.OLVColumn)(new BrightIdeasSoftware.OLVColumn()));
            this.sizeColumn = ((BrightIdeasSoftware.OLVColumn)(new BrightIdeasSoftware.OLVColumn()));
            this.button3 = new System.Windows.Forms.Button();
            this.txtMessage = new System.Windows.Forms.TextBox();
            this.button4 = new System.Windows.Forms.Button();
            this.splitContainer1 = new System.Windows.Forms.SplitContainer();
            this.splitContainer2 = new System.Windows.Forms.SplitContainer();
            this.tabControl1 = new System.Windows.Forms.TabControl();
            this.tabPage1 = new System.Windows.Forms.TabPage();
            this.tabPage2 = new System.Windows.Forms.TabPage();
            this.btnSetAttr = new System.Windows.Forms.Button();
            this.listViewProperties = new System.Windows.Forms.ListView();
            ((System.ComponentModel.ISupportInitialize)(this.olvListViewEbParts)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).BeginInit();
            this.splitContainer1.Panel1.SuspendLayout();
            this.splitContainer1.Panel2.SuspendLayout();
            this.splitContainer1.SuspendLayout();
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer2)).BeginInit();
            this.splitContainer2.Panel1.SuspendLayout();
            this.splitContainer2.Panel2.SuspendLayout();
            this.splitContainer2.SuspendLayout();
            this.tabControl1.SuspendLayout();
            this.tabPage1.SuspendLayout();
            this.tabPage2.SuspendLayout();
            this.SuspendLayout();
            // 
            // button1
            // 
            this.button1.Location = new System.Drawing.Point(14, 13);
            this.button1.Name = "button1";
            this.button1.Size = new System.Drawing.Size(75, 23);
            this.button1.TabIndex = 0;
            this.button1.Text = "button1";
            this.button1.UseVisualStyleBackColor = true;
            this.button1.Click += new System.EventHandler(this.button1_Click);
            // 
            // button2
            // 
            this.button2.Location = new System.Drawing.Point(14, 33);
            this.button2.Name = "button2";
            this.button2.Size = new System.Drawing.Size(75, 23);
            this.button2.TabIndex = 2;
            this.button2.Text = "button2";
            this.button2.UseVisualStyleBackColor = true;
            this.button2.Click += new System.EventHandler(this.button2_Click);
            // 
            // olvSongs
            // 
            this.olvListViewEbParts.AllColumns.Add(this.titleColumn);
            this.olvListViewEbParts.AllColumns.Add(this.sizeColumn);
            this.olvListViewEbParts.Columns.AddRange(new System.Windows.Forms.ColumnHeader[] {
            this.titleColumn,
            this.sizeColumn});
            this.olvListViewEbParts.Dock = System.Windows.Forms.DockStyle.Fill;
            this.olvListViewEbParts.HideSelection = false;
            this.olvListViewEbParts.Location = new System.Drawing.Point(0, 0);
            this.olvListViewEbParts.Margin = new System.Windows.Forms.Padding(4);
            this.olvListViewEbParts.Name = "olvSongs";
            this.olvListViewEbParts.ShowGroups = false;
            this.olvListViewEbParts.Size = new System.Drawing.Size(416, 244);
            this.olvListViewEbParts.TabIndex = 3;
            this.olvListViewEbParts.UseCompatibleStateImageBehavior = false;
            this.olvListViewEbParts.View = System.Windows.Forms.View.Details;
            this.olvListViewEbParts.DoubleClick += new System.EventHandler(this.olvSongs_DoubleClick);
            // 
            // titleColumn
            // 
            this.titleColumn.AspectName = "BMK";
            this.titleColumn.Text = "BMK";
            this.titleColumn.Width = 160;
            // 
            // sizeColumn
            // 
            this.sizeColumn.AspectName = "IsGezeichnet";
            this.sizeColumn.AspectToStringFormat = "";
            this.sizeColumn.HeaderTextAlign = System.Windows.Forms.HorizontalAlignment.Center;
            this.sizeColumn.Text = "Gezeichnet";
            this.sizeColumn.TextAlign = System.Windows.Forms.HorizontalAlignment.Center;
            this.sizeColumn.Width = 85;
            // 
            // button3
            // 
            this.button3.Location = new System.Drawing.Point(14, 52);
            this.button3.Name = "button3";
            this.button3.Size = new System.Drawing.Size(75, 23);
            this.button3.TabIndex = 4;
            this.button3.Text = "button3";
            this.button3.UseVisualStyleBackColor = true;
            this.button3.Click += new System.EventHandler(this.button3_Click);
            // 
            // txtMessage
            // 
            this.txtMessage.Dock = System.Windows.Forms.DockStyle.Fill;
            this.txtMessage.Location = new System.Drawing.Point(3, 3);
            this.txtMessage.Multiline = true;
            this.txtMessage.Name = "txtMessage";
            this.txtMessage.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
            this.txtMessage.Size = new System.Drawing.Size(402, 167);
            this.txtMessage.TabIndex = 5;
            // 
            // button4
            // 
            this.button4.Location = new System.Drawing.Point(14, 81);
            this.button4.Name = "button4";
            this.button4.Size = new System.Drawing.Size(75, 23);
            this.button4.TabIndex = 6;
            this.button4.Text = "button4";
            this.button4.UseVisualStyleBackColor = true;
            this.button4.Click += new System.EventHandler(this.button4_Click);
            // 
            // splitContainer1
            // 
            this.splitContainer1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.splitContainer1.Location = new System.Drawing.Point(0, 0);
            this.splitContainer1.Name = "splitContainer1";
            // 
            // splitContainer1.Panel1
            // 
            this.splitContainer1.Panel1.Controls.Add(this.splitContainer2);
            // 
            // splitContainer1.Panel2
            // 
            this.splitContainer1.Panel2.Controls.Add(this.btnSetAttr);
            this.splitContainer1.Panel2.Controls.Add(this.button1);
            this.splitContainer1.Panel2.Controls.Add(this.button4);
            this.splitContainer1.Panel2.Controls.Add(this.button2);
            this.splitContainer1.Panel2.Controls.Add(this.button3);
            this.splitContainer1.Size = new System.Drawing.Size(529, 450);
            this.splitContainer1.SplitterDistance = 416;
            this.splitContainer1.TabIndex = 7;
            // 
            // splitContainer2
            // 
            this.splitContainer2.Dock = System.Windows.Forms.DockStyle.Fill;
            this.splitContainer2.Location = new System.Drawing.Point(0, 0);
            this.splitContainer2.Name = "splitContainer2";
            this.splitContainer2.Orientation = System.Windows.Forms.Orientation.Horizontal;
            // 
            // splitContainer2.Panel1
            // 
            this.splitContainer2.Panel1.Controls.Add(this.olvListViewEbParts);
            // 
            // splitContainer2.Panel2
            // 
            this.splitContainer2.Panel2.Controls.Add(this.tabControl1);
            this.splitContainer2.Size = new System.Drawing.Size(416, 450);
            this.splitContainer2.SplitterDistance = 244;
            this.splitContainer2.TabIndex = 0;
            // 
            // tabControl1
            // 
            this.tabControl1.Controls.Add(this.tabPage2);
            this.tabControl1.Controls.Add(this.tabPage1);
            this.tabControl1.Dock = System.Windows.Forms.DockStyle.Fill;
            this.tabControl1.Location = new System.Drawing.Point(0, 0);
            this.tabControl1.Name = "tabControl1";
            this.tabControl1.SelectedIndex = 0;
            this.tabControl1.Size = new System.Drawing.Size(416, 202);
            this.tabControl1.TabIndex = 0;
            // 
            // tabPage1
            // 
            this.tabPage1.Controls.Add(this.txtMessage);
            this.tabPage1.Location = new System.Drawing.Point(4, 25);
            this.tabPage1.Name = "tabPage1";
            this.tabPage1.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage1.Size = new System.Drawing.Size(408, 173);
            this.tabPage1.TabIndex = 0;
            this.tabPage1.Text = "Messages";
            this.tabPage1.UseVisualStyleBackColor = true;
            // 
            // tabPage2
            // 
            this.tabPage2.Controls.Add(this.listViewProperties);
            this.tabPage2.Location = new System.Drawing.Point(4, 25);
            this.tabPage2.Name = "tabPage2";
            this.tabPage2.Padding = new System.Windows.Forms.Padding(3);
            this.tabPage2.Size = new System.Drawing.Size(408, 173);
            this.tabPage2.TabIndex = 1;
            this.tabPage2.Text = "Properties";
            this.tabPage2.UseVisualStyleBackColor = true;
            // 
            // btnSetAttr
            // 
            this.btnSetAttr.Location = new System.Drawing.Point(1, 423);
            this.btnSetAttr.Name = "btnSetAttr";
            this.btnSetAttr.Size = new System.Drawing.Size(105, 23);
            this.btnSetAttr.TabIndex = 7;
            this.btnSetAttr.Text = "Set Attributes";
            this.btnSetAttr.UseVisualStyleBackColor = true;
            this.btnSetAttr.Click += new System.EventHandler(this.btnSetAttr_Click);
            // 
            // listViewProperties
            // 
            this.listViewProperties.Dock = System.Windows.Forms.DockStyle.Fill;
            this.listViewProperties.HideSelection = false;
            this.listViewProperties.Location = new System.Drawing.Point(3, 3);
            this.listViewProperties.Name = "listViewProperties";
            this.listViewProperties.Size = new System.Drawing.Size(402, 167);
            this.listViewProperties.TabIndex = 0;
            this.listViewProperties.UseCompatibleStateImageBehavior = false;
            // 
            // frmGUI
            // 
            this.AutoScaleDimensions = new System.Drawing.SizeF(8F, 16F);
            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;
            this.ClientSize = new System.Drawing.Size(529, 450);
            this.Controls.Add(this.splitContainer1);
            this.Name = "frmGUI";
            this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;
            this.Text = "Form1";
            ((System.ComponentModel.ISupportInitialize)(this.olvListViewEbParts)).EndInit();
            this.splitContainer1.Panel1.ResumeLayout(false);
            this.splitContainer1.Panel2.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer1)).EndInit();
            this.splitContainer1.ResumeLayout(false);
            this.splitContainer2.Panel1.ResumeLayout(false);
            this.splitContainer2.Panel2.ResumeLayout(false);
            ((System.ComponentModel.ISupportInitialize)(this.splitContainer2)).EndInit();
            this.splitContainer2.ResumeLayout(false);
            this.tabControl1.ResumeLayout(false);
            this.tabPage1.ResumeLayout(false);
            this.tabPage1.PerformLayout();
            this.tabPage2.ResumeLayout(false);
            this.ResumeLayout(false);
    }
    #endregion
    private System.Windows.Forms.Button button1;
    private System.Windows.Forms.Button button2;
    private BrightIdeasSoftware.ObjectListView olvListViewEbParts;
    private BrightIdeasSoftware.OLVColumn titleColumn;
    private BrightIdeasSoftware.OLVColumn sizeColumn;
    private System.Windows.Forms.Button button3;
    private System.Windows.Forms.TextBox txtMessage;
    private System.Windows.Forms.Button button4;
    private System.Windows.Forms.SplitContainer splitContainer1;
    private System.Windows.Forms.SplitContainer splitContainer2;
    private System.Windows.Forms.TabControl tabControl1;
    private System.Windows.Forms.TabPage tabPage1;
    private System.Windows.Forms.TabPage tabPage2;
    private System.Windows.Forms.Button btnSetAttr;
    private System.Windows.Forms.ListView listViewProperties;
}
//*** SourceCombiner -> original file MyAttributesForNode.cs ***
public static class MyAttributesForNode
{
    static UnconstrainedContext Context;
    static frmGUI scriptGUI;
    static MyAttributesForNode()
    {
        Context = Script.Context;
        scriptGUI = Script.scriptGUI;
    }
    public static void GetNodeMyAttributes()
    {
        Scene activeScene = Context.ActiveScene;
        activeScene.NodeSelectionEvent += ActiveScene_NodeSelectionEvent;
    }
     public static void SetNodeMyAttributes(string attrName,  string attrValue)
    {
        Node actNode = Context.ActiveNode;
        if (actNode.AttributeSet.Contains(attrName))
        {
            actNode.AttributeSet[attrName].Value = attrValue;
        }
        else
        {
            actNode.AttributeSet.Add(new Attrib(attrName, attrValue));
        }
        actNode.Selected = true;
        actNode.Selected = false;
    }
    static void ActiveScene_NodeSelectionEvent(object sender, SelectionEventArgs e)
    {
        Dictionary<string, string> p = new Dictionary<string, string>();
        Node actNode = Context.ActiveNode;
        // Display all attributes of the main assembly
        string outputString = "";
        foreach (Attrib attrib in actNode.AttributeSet)
        {
            // Output all values 
            if (attrib.Value.GetType() != typeof(AttributeSet))
            {
                outputString += attrib.Name + " = " + attrib.Value.ToString() + Environment.NewLine;
                p.Add(attrib.Name, attrib.Value.ToString());
            }
            else // Output all values of a sub-attribute
                foreach (Attrib att in attrib.Value as AttributeSet)
                {
                    outputString += attrib.Name + "::" + att.Name + " = " + att.Value.ToString() + Environment.NewLine;
                    p.Add(attrib.Name + "::" + att.Name, att.Value.ToString());
                }
        }
        //scriptGUI.Say(outputString);
        scriptGUI.ShowProperties(p);
    }
}
//*** SourceCombiner -> original file Script-Main.cs ***
// <debug /> 
// <assembly>API/ISD.CAD.Dimensioning.dll</assembly>
// <assembly>API/ISD.CAD.IO.dll</assembly>
// <assembly>API/ObjectListView.dll</assembly>
// <assembly>API/HiCAD.Data.dll</assembly>
public class Script : ScriptBase
{
    public static UnconstrainedContext Context = (UnconstrainedContext)BaseContext;
    public static ISD.CAD.Data.Scene activeScene = Context.ActiveScene;
    public static frmGUI scriptGUI;
    public static void Main()
    {
        //Hallo Script
        scriptGUI = new frmGUI();
        scriptGUI.Show();
        MyAttributesForNode.GetNodeMyAttributes();
    }
    public static void test()
    {
        string ftdPath = @"C:\HiCAD\templates\Font_Arial\sys\Bezeichnung.ftd";
        var nodes = new List<ISD.CAD.Data.Node>();
        foreach (ISD.CAD.Data.Node n in Context.ActiveScene.Nodes)
            nodes.Add(n);
        ISD.CAD.Dimensioning.LabelCreation.Create(Context.ActiveScene.ActiveView, nodes, ftdPath, true);
    }
    public static void butt3()
    {
        LabelContainer ls = new LabelContainer(Context.ActiveNode);
        foreach (var item in ls)
        {
            item.Delete();
        }
    }
    public static void GetCoordinate()
    {
        scriptGUI.Say(Context.ActiveNode.CoordinateSystem.Origin.X.ToString());
        scriptGUI.Say(Context.ActiveNode.BoundingBox.SizeX.ToString());
    }
    public static void Init()
    {
        /// Create a new scene
        //Context.NewScene("EX018.SZA");
        /// Create a new main assembly
        var ac = new AssemblyCreator();
        ac.Name = "Main";
        Context.NewScene("EX018.SZA");
        //MessageBox.Show(cnt.ToString());
        Context.ActiveScene.CreateMainAssembly(ac);
    }
    public static FeatureExecContext Context1
    {
        get
        {
            return BaseContext as FeatureExecContext;
        }
    }
    private static void create(AssemblyNode parent)
    {
        // Create a block
        BlockCreator blockCreator = new BlockCreator(40, 40, 40);
        Part block = Context.CreatePart(blockCreator, parent);
        // Translate the block
        Transformation blockTransformation = new Transformation();
        blockTransformation.SetTranslation(new Vector3D(-20, -20, -20));
        block.Move(blockTransformation);
        // Create a cylinder
        CylinderCreator cylCreator = new CylinderCreator();
        cylCreator.Radius = 10;
        cylCreator.Height = 40;
        Part cyl = Context.CreatePart(cylCreator, parent);
        Transformation cylTransformation = new Transformation();
        // Also transform the cylinder
        cylTransformation.SetTranslation(new Vector3D(0, 0, 20));
        cyl.Move(cylTransformation);
        // Copy the cylinder three times
        Transformation cylRotation = new Transformation();
        for (int i = 0; i < 3; ++i)
        {
            cylRotation.SetIdent();
            cylRotation.SetRotation(new Point3D(0, 0, 0), NormVector3D.E1, (i + 1) * 90.0);
            Node tmp = cyl.Copy();
            tmp.Move(cylRotation);
            tmp.DisplaceTo(parent);
        }
    }
    private static void Label(AssemblyNode parent)
    {
        Node pt = Context.CreatePart(new BlockCreator(100, 100, 100), parent);
        PartLabel simpleLbl = PartLabel.Create(
           new BasePoint(pt, new Point3D(0, 0, 0)),
           new Vector2D(25, -25),
           "DemoLabel",
           Context.CurrentView);
    }
    private static void imortStep()
    {
        ISD.CAD.IO.StepImportSettings settings = new ISD.CAD.IO.StepImportSettings();
        ISD.CAD.IO.FileIO.Load(@"C:\Users\Andrej\Downloads\STEP-2.14\9666.926(2).stp", settings);
    }
    private static void selectItem()
    {
        // Create a list of catalogues to display
        List<String> cats = new List<string>();
        //cats.Add("I_PROFILE");
        //cats.Add("BETONSTAHL");
        cats.Add("BOLDT_8546");
        // Call the dialog and store the result in a Nullable<StandardItem>
        var si = StandardSelectionDialog.SelectStandardItem(cats);
        //StandardItem? si = StandardSelectionDialog.SelectStandardItem(cats);
        //StandardSelectionDialog.StandardSelectionDialog();
        // If si contains a value, the user selected an entry in the dialog
        //if (si.HasValue)
        //MessageBox.Show("si.Value.ToString()");
    }
    public static void LoadKRA()
    {
        ISD.CAD.Data.Scene s = Context.ActiveScene;
        Node e = s.LoadNodeToStoredPosition(@"C:\HiCAD\Kataloge\Werksnormen\BLECHLASCHE.KRA", s.MainAssembly);
        MessageBox.Show(e.Name);
    }
}
